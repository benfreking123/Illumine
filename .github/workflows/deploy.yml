name: Build & Deploy Quartz (root vault -> Quartz/content, single ESM config)

on:
  push:
    branches: [ main ]            # change if you push to another branch

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      # 1) Checkout your repo (vault at repo root)
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Node + pnpm (via corepack)
      - name: Setup Node (v22)
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Enable corepack (pnpm)
        run: corepack enable

      # 3) Clone Quartz and install its deps
      - name: Clone Quartz
        run: git clone --depth=1 https://github.com/jackyzha0/quartz.git qsrc

      - name: Install Quartz deps (pnpm workspace)
        run: pnpm install --no-frozen-lockfile --dir qsrc

      # 4) Copy your vault (repo root) into qsrc/content
      - name: Copy root vault -> qsrc/content
        run: |
          mkdir -p qsrc/content
          rsync -a \
            --include='*/' \
            --include='*.md' --include='*.markdown' \
            --include='*.png' --include='*.jpg' --include='*.jpeg' \
            --include='*.gif' --include='*.svg' --include='*.webp' \
            --include='*.pdf' \
            --exclude='.git/**' \
            --exclude='.github/**' \
            --exclude='node_modules/**' \
            --exclude='public/**' \
            --exclude='qsrc/**' \
            --exclude='README.md' \
            ./ qsrc/content/
          echo "Sample files:"
          find qsrc/content -maxdepth 2 -type f | head -n 20

      # 5) Remove any config inside content (would shadow the real one)
      - name: Remove stray configs from content
        run: |
          rm -f qsrc/content/quartz.config.ts qsrc/content/quartz.config.js qsrc/content/quartz.config.mjs || true

      # 6) Install the ONLY config Quartz should see (ESM, next to quartz/)
      - name: Install build-time config (ESM only)
        run: |
          # Ensure no competing config exists next to Quartz
          rm -f qsrc/quartz.config.ts qsrc/quartz.config.js || true

          # Create the runtime config Quartz will load
          cat > qsrc/quartz.config.mjs <<'EOF'
          export default {
            site: {
              title: "Illumine",
              description: "Spiritual wiki",
              baseUrl: "https://benfreking123.github.io/Illumine/",
            },
            build: {
              outputDir: "public",
              ignorePatterns: [],
              assetsDir: "static",
            },
            theme: {
              css: ["./static/custom.css"],
            },
            plugins: {},
          };
          EOF

          # Make sure the referenced css exists (optional)
          mkdir -p qsrc/static
          [ -f qsrc/static/custom.css ] || echo "/* custom styles */" > qsrc/static/custom.css

          echo "Configs Quartz might see (should list ONLY qsrc/quartz.config.mjs):"
          find qsrc -maxdepth 2 -name "quartz.config.*" -type f -printf "%p\n"

      # 7) Build from inside qsrc (no flags; Quartz will auto-pick the ESM config)
      - name: Build with Quartz CLI
        working-directory: qsrc
        run: node quartz/bootstrap-cli.mjs build

      # 8) Upload the artifact for Pages
      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: qsrc/public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
